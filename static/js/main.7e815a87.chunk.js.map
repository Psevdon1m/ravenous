{"version":3,"sources":["images/ravenous_favicon.ico","components/Business/Business.jsx","components/BusinessList/BusinessList.jsx","util/Yelp.js","components/SearchBar/SearchBar.jsx","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Business","props","business","this","name","replace","urlToPlace","address","lat","long","className","href","url","target","src","imageSrc","alt","city","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","key","id","Yelp","term","location","sortBy","CORS_url","console","log","fetch","headers","then","response","json","jsonResponse","image_url","address1","state","zip_code","categories","title","alias","review_count","coordinates","latitude","longitude","e","SearchBar","handleTermChange","bind","handleLocationChange","handleSearch","handlekeyPress","sortByOptions","sortByOption","setState","searchYelp","event","value","indexOf","toLowerCase","alert","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","onChange","placeholder","onKeyPress","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7e815a87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ravenous_favicon.83942fdc.ico\";","import React from \"react\";\r\nimport \"./Business.css\";\r\n\r\nclass Business extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    //this.onClick = this.onClick.bind(this)\r\n  }\r\n \r\n\r\n  //apiKey= 'AIzaSyCM4VvxEviBjv-5jLyq8EQEI24Ep2464r0'\r\n  \r\n  \r\n \r\n\r\n  //handleAddressClick(event) {}\r\n\r\n  //let businessAddressLink = ``\r\n\r\n   \r\n\r\n  render() {\r\n    const { business } = this.props;\r\n    //let businessWebPage = business.url;\r\n    let n = business.name;\r\n    let name = n.replace(\" \", \"+\");\r\n    const urlToPlace = `https://www.google.com/maps/search/${name},${business.address},${business.lat},${business.long}`\r\n    \r\n    \r\n    \r\n    //console.log(businessWebPage)\r\n    return (\r\n      <div className=\"Business\">\r\n        <div className=\"image-container\">\r\n          <a href={business.url} target=\"_blank\">\r\n          <img src={business.imageSrc} alt='food-img' />\r\n          </a>\r\n          \r\n        </div>\r\n        <div className=\"Business-information\">\r\n          <div className=\"Business-address\">\r\n            <a href={urlToPlace} target='_blank'>{business.name}</a>\r\n            <p>{business.city}<br></br>\r\n               {business.address}<br></br>\r\n               {business.zipCode}</p>\r\n          </div>\r\n          <div className=\"Business-reviews\">\r\n            <h3>{business.category}</h3>\r\n            <h3 className=\"rating\">Raiting: {business.rating}</h3>\r\n            <p>Reviews: {business.reviewCount}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Business;\r\n","import React from \"react\";\r\n\r\nimport \"./BusinessList.css\";\r\nimport Business from \"../Business/Business\";\r\nimport App from \"../App/App\";\r\n\r\nclass BusinessList extends React.Component {\r\n\r\n  \r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"BusinessList\">\r\n        {this.props.businesses.map((business) => {\r\n          return <Business business={business} key={business.id} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BusinessList;\r\n","let client_id = 'elu1QQPaAD_1dVQHtM6EPw';\r\n\r\nlet API_key = 'YzyUZg7_gboQtOkgmAoUYOi7GWJtHUw0RcTfZ4RrS2hny72sU6i2TThekysM9kiJoUWg6mMdZZmC574m8d1AmsAuLu74zolT2sA9GAP-7_uuk6YT3G8sJGVOepCtXnYx'\r\n\r\nexport const Yelp = {\r\n    search(term, location, sortBy){\r\n        let url = `https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`;\r\n        //Here I am using CORS Anywhere Api to bypass CORS restrictions \r\n        let CORS_url = `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`\r\n\r\n        console.log(CORS_url)\r\n\r\n        return fetch(CORS_url, {headers: {\r\n            \"X-Requested-With\": \"XMLHttpRequest\",\r\n            \"Authorization\": `Bearer ${API_key}`\r\n            \r\n    \r\n    }}).then((response) => {\r\n            return response.json()\r\n        } ).then(jsonResponse => {\r\n            console.log(jsonResponse)\r\n            try{\r\n                if (jsonResponse.businesses) {\r\n\r\n                   return jsonResponse.businesses.map(business => {\r\n                        return{\r\n                            id: business.id,\r\n                            imageSrc: business.image_url,\r\n                            name: business.name,\r\n                            address: business.location.address1,\r\n                            city: business.location.city,\r\n                            state: business.location.state,\r\n                            zipCode: business.location.zip_code,\r\n                            category: business.categories[0].title,\r\n                            alias: business.alias,\r\n                            rating: business.rating,\r\n                            reviewCount: business.review_count,\r\n                            url: business.url,\r\n                            lat: business.coordinates.latitude,\r\n                            long: business.coordinates.longitude,\r\n\r\n                        }\r\n                           \r\n                        \r\n                    })\r\n                }\r\n            } catch(e){\r\n                console.log(e);\r\n            }\r\n            \r\n        })\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\nimport Yelp from '../../util/Yelp'\r\nimport Business from \"../Business/Business\";\r\n\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      term: \"\",\r\n      location: \"\",\r\n      sortBy: \"best_match\",\r\n    };\r\n\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handlekeyPress = this.handlekeyPress.bind(this);\r\n  \r\n\r\n    this.sortByOptions = {\r\n      \"Best Match\": \"best_match\",\r\n      \"Highest Rated\": \"rating\",\r\n      \"Most Reviewed\": \"review_count\",\r\n    }; \r\n\r\n    \r\n  }\r\n\r\n\r\n  getSortByClass(sortByOption) {\r\n    if (sortByOption === this.state.sortBy){\r\n      return 'active';\r\n    } else {\r\n      return '';\r\n    };\r\n  }\r\n\r\n\r\n  handleSortByChange(sortByOption) {\r\n    this.setState({\r\n      sortBy: sortByOption\r\n      }, () => {\r\n      this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n    });\r\n  }\r\n\r\n  handleTermChange(event) {\r\n    this.setState({\r\n      term: event.target.value\r\n    })\r\n   \r\n  }\r\n\r\n  handleLocationChange(event) {\r\n    this.setState({\r\n      location: event.target.value\r\n    })\r\n    \r\n  }\r\n\r\n  \r\n\r\n  handlekeyPress(event){\r\n\r\n    let locationsToAlert = [\"San Diego\", \" Chicago\" ,\" Paris\" ,\" Philadelphia\" ,\" Denver\" ,\" Vancouver\" ,\" San Francisco\" ,\" Dallas\" ,\" Berlin\" ,\" New York\", \" Los Angeles\", \" Washington\", \" DC\", \" Atlanta\", \" Toronto\", \" Honolulu\", \" Miami\", \" San Jose\", \" Dublin\", \" Detroit\", \" Saint Louis\", \" Palo Alto\", \" Austin\", \" Houston\", \" Seattle\", \" Boston\", \" Minneapolis\", \" Las Vegas\", \" London\", \" Madrid\", \" Amsterdam\", \" Portland\", \" Oakland\"]\r\n\r\n    let locations = [\"san diego\", \"chicago\" ,\"paris\" ,\"philadelphia\" ,\"denver\" ,\"vancouver\" ,\"san francisco\" ,\"dallas\" ,\"berlin\" ,\"new york\", \"los angeles\", \"washington\", \"dc\", \"atlanta\", \"toronto\", \"honolulu\", \"miami\", \"san jose\", \"dublin\", \"detroit\", \"saint louis\", \"palo alto\", \"austin\", \"houston\", \"seattle\", \"boston\", \"minneapolis\", \"las vegas\", \"london\", \"madrid\", \"amsterdam\", \"portland\", \"oakland\"]\r\n\r\n    if(event.key === \"Enter\") {\r\n      if( locations.indexOf(this.state.location.toLowerCase()) === -1) {\r\n        alert(`This location is unavaialble, please choose one of these: ${locationsToAlert}`)\r\n      } else {\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n        event.preventDefault();\r\n    }\r\n  }\r\n}\r\n\r\n  handleSearch(event){\r\n    let locationsToAlert = [\"San Diego\", \" Chicago\" ,\" Paris\" ,\" Philadelphia\" ,\" Denver\" ,\" Vancouver\" ,\" San Francisco\" ,\" Dallas\" ,\" Berlin\" ,\" New York\", \" Los Angeles\", \" Washington\", \" DC\", \" Atlanta\", \" Toronto\", \" Honolulu\", \" Miami\", \" San Jose\", \" Dublin\", \" Detroit\", \" Saint Louis\", \" Palo Alto\", \" Austin\", \" Houston\", \" Seattle\", \" Boston\", \" Minneapolis\", \" Las Vegas\", \" London\", \" Madrid\", \" Amsterdam\", \" Portland\", \" Oakland\"]\r\n\r\n    let locations = [\"san diego\", \"chicago\" ,\"paris\" ,\"philadelphia\" ,\"denver\" ,\"vancouver\" ,\"san francisco\" ,\"dallas\" ,\"berlin\" ,\"new york\", \"los angeles\", \"washington\", \"dc\", \"atlanta\", \"toronto\", \"honolulu\", \"miami\", \"san jose\", \"dublin\", \"detroit\", \"saint louis\", \"palo alto\", \"austin\", \"houston\", \"seattle\", \"boston\", \"minneapolis\", \"las vegas\", \"london\", \"madrid\", \"amsterdam\", \"portland\", \"oakland\"];\r\n\r\n    if(locations.indexOf(this.state.location.toLowerCase()) === -1){\r\n      alert(`This location is unavaialble, please choose one of these: ${locationsToAlert}`)\r\n    }else {\r\n      \r\n      this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n      event.preventDefault();\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  renderSortByOptions() {\r\n      \r\n    if(this.state.location && this.state.term) {\r\n      \r\n      return Object.keys(this.sortByOptions).map(sortByOption => {\r\n        let sortByOptionValue = this.sortByOptions[sortByOption];\r\n        return <li \r\n        className={this.getSortByClass(sortByOptionValue)}\r\n        key={sortByOptionValue}\r\n        onClick={\r\n          this.handleSortByChange.bind(this, sortByOptionValue)\r\n          \r\n        }> {sortByOption}</li>;\r\n      });\r\n    }\r\n     \r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"SearchBar\">\r\n      <div className=\"SearchBar-sort-options\">\r\n        <ul>\r\n         {this.renderSortByOptions()}\r\n        </ul>\r\n      </div>\r\n      <div className=\"SearchBar-fields\">\r\n        <input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\r\n        <input onChange={this.handleLocationChange}\r\n        onKeyPress={this.handlekeyPress}\r\n        placeholder=\"Where? US/Europe\" />\r\n      </div>\r\n      <div className=\"SearchBar-submit\">\r\n        <a onClick={this.handleSearch}>Let's Go</a>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport BusinessList from \"../BusinessList/BusinessList\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { Yelp } from '../../util/Yelp'\nimport icon from \"../../images/ravenous_favicon.ico\";\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state ={\n      businesses: []\n      \n    };\n    this.searchYelp = this.searchYelp.bind(this)\n  }\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({\n        businesses: businesses\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar  searchYelp={this.searchYelp}/>\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}